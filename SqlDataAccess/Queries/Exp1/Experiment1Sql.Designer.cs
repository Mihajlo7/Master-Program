//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SqlDataAccess.Queries.Exp1 {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Experiment1Sql {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Experiment1Sql() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SqlDataAccess.Queries.Exp1.Experiment1Sql", typeof(Experiment1Sql).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INSERT INTO Employee(id,firstName,lastName,email,birthDay,title,phone)
        ///VALUES(@EmployeeId,@EmployeeFirstName,@EmployeeLastName,@EmployeeEmail,@EmployeeBirthDay,@EmployeeTitle,@EmployeePhone);
        ///
        ///INSERT INTO Task(id,name,description,priority,deadline,status,responsible,supervisor)
        ///VALUES(@TaskId,@TaskName,@TaskDescription,@TaskPriority,@TaskDeadline,@TaskStatus,@Responsible,@Supervisor);
        ///
        ///INSERT INTO EmployeeTask(employeeId,taskId) VALUES(@EmployeeId,@TaskId);
        ///.
        /// </summary>
        internal static string Insert {
            get {
                return ResourceManager.GetString("Insert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DROP TABLE IF EXISTS Employee;
        ///CREATE TABLE Employee(
        ///	id BIGINT CONSTRAINT employee_pk PRIMARY KEY,
        ///	firstName NVARCHAR(50) NULL,
        ///	lastName NVARCHAR(50) NULL,
        ///	email NVARCHAR(20) NULL,
        ///	birthDay DATETIME DEFAULT GETDATE(),
        ///	title NVARCHAR(20), 
        ///	phone NVARCHAR(20),
        ///);
        ///
        ///DROP TABLE IF EXISTS Task;
        ///CREATE TABLE Task(
        ///	id BIGINT CONSTRAINT task_id PRIMARY KEY,
        ///	name NVARCHAR(100) NULL,
        ///	description NVARCHAR(300) NULL,
        ///	priority INT DEFAULT 0,
        ///	deadline DATETIME  DEFAULT GETDATE(),
        ///	status NVA [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Tables {
            get {
                return ResourceManager.GetString("Tables", resourceCulture);
            }
        }
    }
}
